From b1c4a1fe488d39b2d4de62ac02c2219c93ca73e8 Mon Sep 17 00:00:00 2001
From: Kirill Kapranov <kirill.kapranov@compulab.co.il>
Date: Sun, 11 Feb 2024 19:20:25 +0200
Subject: [PATCH 111/155] eeprom: layout: add field functions read

Read option is missing in the EEPROM layout feature

Add read function to the structures eeprom_layout and eeprom_field.
Add a general binary read function that copy the field content to the
provided buffer without manipulation.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
Signed-off-by: Kirill Kapranov <kirill.kapranov@compulab.co.il>
---
 common/eeprom/eeprom_field.c  | 22 +++++++++++++++++++++
 common/eeprom/eeprom_layout.c | 37 +++++++++++++++++++++++++++++++++++
 include/eeprom_field.h        |  4 ++++
 include/eeprom_layout.h       |  2 ++
 4 files changed, 65 insertions(+)

diff --git a/common/eeprom/eeprom_field.c b/common/eeprom/eeprom_field.c
index 38827f11805..e588b0943f6 100644
--- a/common/eeprom/eeprom_field.c
+++ b/common/eeprom/eeprom_field.c
@@ -129,6 +129,28 @@ int eeprom_field_update_bin(struct eeprom_field *field, uchar *fbuf,
 	return __eeprom_field_update_bin(field, fbuf, value, false);
 }
 
+/**
+ * eeprom_field_read_bin() - Read field data in binary form
+ *
+ * @field:     an initialized field
+ * @fbuf:      field buffer
+ * @buf:       read buffer
+ * @buf_size:  read buffer size
+ */
+int eeprom_field_read_bin(const struct eeprom_field *field, uchar *fbuf,
+                         uchar *buf, int buf_size)
+{
+	memset(buf, 0, buf_size);
+	if (field->size <= 0)
+		return 0;
+	if (field->size > buf_size)
+		memcpy(buf, fbuf, buf_size);
+	else
+		memcpy(buf, fbuf, field->size);
+
+	return 0;
+}
+
 /**
  * eeprom_field_update_reserved() - Update reserved field with new data in
  *				    binary form
diff --git a/common/eeprom/eeprom_layout.c b/common/eeprom/eeprom_layout.c
index 1fab8e4dca3..cc6dd39e016 100644
--- a/common/eeprom/eeprom_layout.c
+++ b/common/eeprom/eeprom_layout.c
@@ -95,6 +95,42 @@ static int eeprom_layout_update_field(struct eeprom_layout *layout,
 	return -1;
 }
 
+/*
+ * eeprom_layout_read_field() - read a single field from the layout data
+ * @layout:    A pointer to an existing struct layout.
+ * @field_name:        The name of the field to update.
+ * @buf:       Read data buffer.
+ * @buf_size:  Read data buffer size.
+ *
+ * Returns: 0 on success, negative error value on failure.
+ */
+static int eeprom_layout_read_field(struct eeprom_layout *layout,
+				    char *field_name, uchar *buf, int buf_size)
+{
+       int i, err;
+       struct eeprom_field *fields = layout->fields;
+       uchar *fbuf = layout->data;
+
+       if ((field_name == NULL) || (buf == NULL) || (buf_size <= 0))
+               return -1;
+
+	for (i = 0; i < layout->num_of_fields; fbuf += fields[i++].size) {
+		if (fields[i].name == RESERVED_FIELDS ||
+		    strcmp(fields[i].name, field_name))
+			continue;
+
+		err = fields[i].read(&fields[i], fbuf, buf, buf_size);
+		if (err)
+			printf("Field %s, read error\n", field_name);
+
+		return err;
+	}
+
+	printf("No such field '%s'\n", field_name);
+
+	return -1;
+}
+
 /*
  * eeprom_layout_setup() - setup layout struct with the layout data and
  *			   metadata as dictated by layout_version
@@ -116,4 +152,5 @@ void eeprom_layout_setup(struct eeprom_layout *layout, unsigned char *buf,
 	layout->data_size = buf_size;
 	layout->print = eeprom_layout_print;
 	layout->update = eeprom_layout_update_field;
+	layout->read = eeprom_layout_read_field;
 }
diff --git a/include/eeprom_field.h b/include/eeprom_field.h
index a13ca566af4..6b6cd372296 100644
--- a/include/eeprom_field.h
+++ b/include/eeprom_field.h
@@ -18,11 +18,15 @@ struct eeprom_field {
 	void (*print)(const struct eeprom_field *eeprom_field, uchar *fbuf);
 	int (*update)(struct eeprom_field *eeprom_field, uchar *fbuf,
 		      char *value);
+	int (*read)(const struct eeprom_field *field, uchar *fbuf, uchar *buf,
+		    int buf_size);
 };
 
 void eeprom_field_print_bin(const struct eeprom_field *field, uchar *fbuf);
 int eeprom_field_update_bin(struct eeprom_field *field, uchar *fbuf,
 			    char *value);
+int eeprom_field_read_bin(const struct eeprom_field *field, uchar *fbuf,
+			  uchar *buf, int buf_size);
 
 void eeprom_field_print_bin_rev(const struct eeprom_field *field, uchar *fbuf);
 int eeprom_field_update_bin_rev(struct eeprom_field *field, uchar *fbuf,
diff --git a/include/eeprom_layout.h b/include/eeprom_layout.h
index 730d963ab96..50e8ec10858 100644
--- a/include/eeprom_layout.h
+++ b/include/eeprom_layout.h
@@ -22,6 +22,8 @@ struct eeprom_layout {
 	void (*print)(const struct eeprom_layout *eeprom_layout);
 	int (*update)(struct eeprom_layout *eeprom_layout, char *field_name,
 		      char *new_data);
+	int (*read)(struct eeprom_layout *eeprom_layout, char *field_name,
+		    uchar *buf, int buf_size);
 };
 
 void eeprom_layout_setup(struct eeprom_layout *layout, unsigned char *buf,
-- 
2.34.1

